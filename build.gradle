import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.github.davidmc24.gradle.plugin.avro-base' version '1.0.0'
}

group = 'com.danutbuse.testcontainers'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven {
		url "https://packages.confluent.io/maven/"
	}
}

ext {
	set('testcontainersVersion', "1.18.0")
}

dependencies {
	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor "org.projectlombok:lombok:1.18.26"
	testAnnotationProcessor("org.projectlombok:lombok:1.18.26")

	// AWS
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// SQS
	implementation 'com.amazonaws:aws-java-sdk-sqs:1.12.464'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws-messaging:2.2.6.RELEASE'

	// S3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.464'

	// DynamoDB
	implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.12.464'
	implementation 'com.github.derjust:spring-data-dynamodb:5.1.0'

	// Kafka
	implementation 'org.apache.avro:avro:1.10.1'
	implementation 'org.apache.avro:avro-tools:1.10.0'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'io.confluent:kafka-avro-serializer:5.5.1'
	implementation 'io.confluent:kafka-schema-registry-client:5.5.1'
	testImplementation 'org.testcontainers:kafka:1.17.3'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-avro:2.14.0'

	// Spring
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework:spring-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Testcontainers with localstack
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:localstack'

}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		mavenBom 'org.springframework.data:spring-data-releasetrain:Lovelace-SR1'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
	source("src/main/resources/avro")
	outputDir = file("src/main/java")
}

tasks.named("compileJava").configure {
	source(generateAvro)
}
